In questo file, che useremo come blocco note, ci appunteremo tutti i piccoli problemi o warning che vediamo e dovremo risolverli tutti.
L'obiettivo è finire il progetto in modo che non lanci nessun warning, o comunque che non avvengano errori. Ad esempio quando faccio una query su mongoose,
la query funziona ma mongoose da errore perché dice "query was already executed" e quindi finiamo nel campo catch(error) e non ritorniamo bene le risposte 
in json al client che ha fatto la richiesta.
Mi è toccato ad esempio mettere res.json(response) nel catch(error) e non nel try, cosa sbagliatissima ma che per ora fa funzionare tutto perché mongoose va sempre in errore.
E questo è solo un esempio

- Le richieste di amicizia (e tutto ciò che è relativo al friends component) non si aggiorna con socket finché il menu a tendina
  è chiuso; bisogna aggirarlo tramite qualche emit verso l'header component, che poi quando apriremo da lì il menu a tendina del
  friend component chiamerà una funzione che aggiornerà le richieste di amicizia/i nuovi amici/ecc.
- Se un giocatore si mette in attesa (ready up) ma poi va nel suo profilo e poi ritorna alla home, nel frattempo era rimasto comunque 
  in coda e adesso si può riaggiungere un'altra volta.
    1. O facciamo in modo che non si possa andare da nessuna parte finché sei in stato di ready
    2. O facciamo che ogni volta che l'utente esce dalla homepage venga cambiato in false lo stato isready
- controllare TUTTE le volte che viene salvato il current user in localstorage e togliergli salt digest e password mettendoli a null
  prima di fare la localStorage.setItem('current user')
- la onInit() di myprofile non viene chiamata
- mettere commenti in inglese
- segnalare con un errore che il login non è andato a buon fine